[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "sf-sml"
description = "Secretflow Secure Machine Learning"
readme = "README.md"
license = "Apache-2.0"
authors = [
    {name = "SecretFlow Team", email = "secretflow-contact@service.alipay.com"}
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.10,<3.12"
dependencies = [
    "spu==0.9.4.dev20250618",
    "pandas==1.5.3",
    "scikit-learn==1.5.2",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = ["pylint", "pre-commit", "pytest"]

[project.urls]
Homepage = "https://github.com/secretflow/sml"
Repository = "https://github.com/secretflow/sml"

[tool.setuptools.packages.find]
exclude = ["emulations*", "tests*"]

[tool.setuptools-scm]
# Automatically generate version number from git tags
write_to = "sml/_version.py"
fallback_version = "0.1.0.dev0"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*", "*Test*", "*Tests"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
ignore_missing_imports = true
no_strict_optional = true
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false

[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "W503",  # line break before binary operator
    "E402",  # module level import not at top of file
    "E501",  # line too long
    "F401",  # imported but unused
    "F841",  # local variable assigned but never used
    "F541",  # f-string is missing placeholders
    "E711",  # comparison to None should be 'if cond is None:'
    "E266",  # too many leading '#' for block comment
    "E722",  # do not use bare 'except'
    "E902",  # FileNotFoundError
]
exclude = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".venv",
    "venv",
    "build",
    "dist",
]

[tool.pydocstyle]
convention = "numpy"
add-ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D200",  # One-line docstring should fit on one line
    "D202",  # No blank lines allowed after function docstring
    "D205",  # 1 blank line required between summary line and description
    "D301",  # Use r""" if any backslashes in a docstring
    "D400",  # First line should end with a period
    "D401",  # First line should be in imperative mood
    "D403",  # First word of the first line should be properly capitalized
    "D406",  # Section name should end with a newline
    "D407",  # Missing dashed underline after section
    "D409",  # Section underline should match the length of its name
    "D410",  # Missing blank line after section
    "D411",  # Missing blank line before section
    "D412",  # No blank lines allowed between a section header and its content
]
