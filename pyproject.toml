[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "sf-sml"
description = "Secretflow Secure Machine Learning"
readme = "README.md"
license = "Apache-2.0"
authors = [
    {name = "SecretFlow Team", email = "secretflow-contact@service.alipay.com"}
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.10,<3.12"
dependencies = [
    "spu==0.9.4.dev20250618",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    # Development and code quality tools
    "pre-commit",
    "pytest",
    "pylint",

    # Code formatting and linting 
    "ruff",
    "mypy",
    "pydocstyle",

    # Package building and publishing
    "twine",
    "build",

    # Emulations and tests dependencies
    "pandas==1.5.3",
    "scikit-learn==1.5.2",
]

[project.urls]
Homepage = "https://github.com/secretflow/sml"
Repository = "https://github.com/secretflow/sml"

[tool.setuptools.packages.find]
exclude = ["emulations*", "tests*"]

[tool.setuptools_scm]
# Automatically generate version number from git tags
write_to = "sml/_version.py"
fallback_version = "0.1.0.dev0"
local_scheme = "no-local-version"
version_scheme = "python-simplified-semver"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*", "*Test*", "*Tests"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.ruff]
# Enable the recommended ruleset
line-length = 88
target-version = "py310"

[tool.ruff.lint]
# Enable recommended rules plus some additional ones
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "UP",  # pyupgrade
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
]

# Ignore rules that conflict with the current codebase style
ignore = [
    "E203",  # whitespace before ':'
    "E402",  # module level import not at top of file
    "E501",  # line too long (handled by formatter)
    "F541",  # f-string is missing placeholders
    "E266",  # too many leading '#' for block comment
    "E741",  # ambiguous variable name
    "E731",  # do not assign a lambda expression, use a def
    "F403",  # 'from module import *' used; unable to detect undefined names
    "F405",  # name may be undefined, or defined from star imports
    "W293",  # blank line contains whitespace
    "E721",  # use isinstance for type comparisons
    "B006",  # mutable default arguments
    "B007",  # unused loop variables
    "B008",  # function calls in argument defaults
    "B020",  # loop control variable overrides iterable
    "B023",  # function doesn't bind loop variable
    "B028",  # no explicit stacklevel keyword argument
    "UP031", # use format specifiers instead of percent format
    "UP038", # use X | Y in isinstance instead of (X, Y)
]

[tool.ruff.lint.per-file-ignores]
"sml/__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[tool.ruff.format]
# Enable the formatter
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
# Configure import sorting
known-first-party = ["sml"]

[tool.mypy]
ignore_missing_imports = true
strict_optional = false
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false

[tool.pydocstyle]
convention = "numpy"
add-ignore = [
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D200",  # One-line docstring should fit on one line
    "D202",  # No blank lines allowed after function docstring
    "D205",  # 1 blank line required between summary line and description
    "D301",  # Use r""" if any backslashes in a docstring
    "D400",  # First line should end with a period
    "D401",  # First line should be in imperative mood
    "D403",  # First word of the first line should be properly capitalized
    "D406",  # Section name should end with a newline
    "D407",  # Missing dashed underline after section
    "D409",  # Section underline should match the length of its name
    "D410",  # Missing blank line after section
    "D411",  # Missing blank line before section
    "D412",  # No blank lines allowed between a section header and its content
]
